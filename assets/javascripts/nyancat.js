/* vim:set ts=8 sts=2 sw=2 tw=0:
 * vim:set fdm=marker:
 *
 * File:        nyancat.js
 * Version      0.1.0
 * Maintainer:  Shintaro Kaneko <kaneshin0120@gmail.com>
 * Last Change: 12-Aug-2012.
 *
 * NOTE:
 *    Require: canvas.js
 */

/*
 * Particle bit pattern data
 * {{{ */
var particle_data = [
  [ [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 1, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  ]
, [ [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 1, 0, 1, 0, 0]
  , [0, 0, 0, 1, 0, 0, 0]
  , [0, 0, 1, 0, 1, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  ]
, [ [0, 0, 0, 0, 0, 0, 0]
  , [0, 1, 0, 0, 0, 1, 0]
  , [0, 0, 1, 0, 1, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 1, 0, 1, 0, 0]
  , [0, 1, 0, 0, 0, 1, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  ]
, [ [1, 0, 0, 0, 0, 0, 1]
  , [0, 1, 0, 0, 0, 1, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 1, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 1, 0, 0, 0, 1, 0]
  , [1, 0, 0, 0, 0, 0, 1]
  ]
, [ [1, 0, 0, 0, 0, 0, 1]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [0, 0, 0, 0, 0, 0, 0]
  , [1, 0, 0, 0, 0, 0, 1]
  ]
]
, particle_data_nr = particle_data.length
, particle_data_lines = particle_data[0].length
, particle_data_columns = particle_data[0][0].length
;
/* }}} */

/*
 * Particle Class
 * {{{ */
var particle = function(spec, canvas) {
  var that = {}
    , context = canvas.context
    , width = canvas.width
    , height = canvas.height
    , k = spec.k
    , color = 'rgba(' + spec.color + ',1)'
    , dot = spec.dot
    , span = spec.span
    , range = spec.range
    , x
    , y
    ;

  initialize();
  /* private function */
  function initialize() {
    initXY();
  }
  function initXY() {
    x = (width + range) * Math.random() + range;
    y = height * Math.random();
  }

  /* public method */
  that = {
    draw: function () {
      context.fillStyle = color;
      for (var i = 0; i < particle_data_lines; i++) {
        for (var j = 0; j < particle_data_columns; j++) {
          switch (particle_data[k][i][j]) {
            case 1:
              context.fillRect(x + i * dot - k * span, y + j * dot, dot, dot);
              break;
            default:
              break;
          }
        }
      }
      if (++k > particle_data_nr - 1) {
        k = 0;
        initXY();
      }
    },
    setColor: function(_color) {
      color = 'rgba(' + _color + ',1)' || 'rgba(255,255,255,1)';
    },
    setDotSize: function(_dot) {
      dot = _dot || 1;
    }
  };
  return that;
};
/* }}} */

/*
 * NyanCat bit pattern data
 * {{{ */
var nyancat_data = [
  [[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,3,7,3,3,3,3,3,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,3,1,1,3,7,3,3,3,4,1,0,1,1,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,1,2,2,1,3,3,3,3,4,1,1,2,2,1,0,0]
  ,[0,0,1,1,0,0,0,1,4,3,3,3,3,3,7,3,3,1,2,2,2,1,3,3,3,4,1,2,2,2,1,0,0]
  ,[0,1,2,2,1,0,0,1,4,3,3,3,7,3,3,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0,0]
  ,[0,1,2,2,2,1,0,1,4,3,3,3,3,3,3,7,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0]
  ,[0,0,1,2,2,2,1,1,4,3,7,3,3,3,3,3,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1,0]
  ,[0,0,0,1,2,2,2,1,4,3,3,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1,0]
  ,[0,0,0,0,1,1,1,1,4,3,3,3,3,3,7,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,7,3,3,3,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0,0]
  ,[0,0,0,0,0,0,1,1,1,4,4,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,1,0,0,0]
  ,[0,0,0,0,0,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]
  ,[0,0,0,0,0,1,2,2,1,1,0,1,2,2,1,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0]
  ,[0,0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ]
, [[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,3,7,3,3,3,3,3,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,3,3,1,1,3,7,3,3,4,1,0,0,1,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,3,1,2,2,1,3,3,3,4,1,0,1,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,7,3,3,3,1,2,2,2,1,3,3,4,1,1,2,2,2,1,0]
  ,[0,0,1,1,0,0,0,1,4,3,3,3,7,3,3,3,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0]
  ,[0,1,2,2,1,0,0,1,4,3,3,3,3,3,3,7,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1]
  ,[0,1,2,2,2,1,1,1,4,3,7,3,3,3,3,3,3,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1]
  ,[0,0,1,1,2,2,2,1,4,3,3,3,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1]
  ,[0,0,0,1,1,1,1,1,4,3,3,3,3,3,7,3,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1]
  ,[0,0,0,0,0,0,0,1,4,4,3,7,3,3,3,3,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,1,0,0]
  ,[0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]
  ,[0,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0]
  ,[0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ]
, [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,3,7,3,3,3,3,3,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,3,3,1,1,3,7,3,3,4,1,0,0,1,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,3,1,2,2,1,3,3,3,4,1,0,1,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,7,3,3,3,1,2,2,2,1,3,3,4,1,1,2,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,7,3,3,3,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,7,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1]
  ,[0,0,0,0,0,0,1,1,4,3,7,3,3,3,3,3,3,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1]
  ,[0,0,0,1,1,1,2,1,4,3,3,3,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1]
  ,[0,0,1,2,2,2,1,1,4,3,3,3,3,3,7,3,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1]
  ,[0,1,2,2,1,1,0,1,4,4,3,7,3,3,3,3,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1]
  ,[0,0,1,1,0,0,0,1,4,4,4,3,3,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,1,0,0]
  ,[0,0,0,0,0,0,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]
  ,[0,0,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0]
  ,[0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0]
  ]
, [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,3,7,3,3,3,3,3,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,3,3,1,1,3,7,3,3,4,1,0,0,1,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,3,1,2,2,1,3,3,3,4,1,0,1,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,7,3,3,3,1,2,2,2,1,3,3,4,1,1,2,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,7,3,3,3,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,7,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1]
  ,[0,0,0,0,0,1,1,1,4,3,7,3,3,3,3,3,3,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1]
  ,[0,0,0,1,1,2,2,1,4,3,3,3,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1]
  ,[0,0,1,2,2,2,1,1,4,3,3,3,3,3,7,3,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1]
  ,[0,1,2,2,1,1,0,1,4,4,3,7,3,3,3,3,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1]
  ,[0,1,2,2,1,0,0,1,4,4,4,3,3,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0]
  ,[0,0,1,1,0,0,0,1,1,4,4,4,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,1,0,0]
  ,[0,0,0,0,0,0,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]
  ,[0,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0]
  ,[0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0]
  ]
, [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,3,7,3,3,3,3,3,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,3,1,1,3,7,3,3,3,4,1,0,1,1,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,1,2,2,1,3,3,3,3,4,1,1,2,2,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,7,3,3,1,2,2,2,1,3,3,3,4,1,2,2,2,1,0,0]
  ,[0,1,1,1,1,0,0,1,4,3,3,3,7,3,3,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0,0]
  ,[1,2,2,2,1,1,1,1,4,3,3,3,3,3,3,7,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0]
  ,[1,1,2,2,2,2,1,1,4,3,7,3,3,3,3,3,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1,0]
  ,[0,0,1,1,1,2,2,1,4,3,3,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1,0]
  ,[0,0,0,0,0,1,1,1,4,3,3,3,3,3,7,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,7,3,3,3,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0,0]
  ,[0,0,0,0,0,0,1,1,1,4,4,4,4,4,4,4,4,4,1,2,2,2,2,2,2,2,2,2,2,1,0,0,0]
  ,[0,0,0,0,0,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0]
  ,[0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0]
  ,[0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0]
  ]
, [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,1,0,0,0,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,3,3,3,3,7,3,7,1,1,3,3,3,3,4,4,1,0,1,1,0,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,7,3,3,3,3,3,1,2,2,1,7,3,3,3,4,1,1,2,2,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,3,3,3,3,3,3,3,3,1,2,2,2,1,3,3,3,4,1,2,2,2,1,0,0]
  ,[0,0,1,1,0,0,0,1,4,3,3,3,3,3,7,3,3,1,2,2,2,2,1,1,1,1,2,2,2,2,1,0,0]
  ,[0,1,2,2,1,0,0,1,4,3,3,3,7,3,3,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0]
  ,[0,1,2,2,1,1,1,1,4,3,3,3,3,3,3,7,1,2,2,2,5,1,2,2,2,2,2,5,1,2,2,1,0]
  ,[0,0,1,2,2,2,1,1,4,3,7,3,3,3,3,3,1,2,2,2,1,1,2,2,2,1,2,1,1,2,2,1,0]
  ,[0,0,0,1,1,2,2,1,4,3,3,3,3,3,3,3,1,2,6,6,2,2,2,2,2,2,2,2,2,6,6,1,0]
  ,[0,0,0,0,0,1,1,1,4,3,3,3,3,3,7,3,1,2,6,6,2,1,2,2,1,2,2,1,2,6,6,1,0]
  ,[0,0,0,0,0,0,0,1,4,4,3,7,3,3,3,3,3,1,2,2,2,1,1,1,1,1,1,1,2,2,1,0,0]
  ,[0,0,0,0,0,0,0,1,4,4,4,3,3,3,3,3,3,3,1,2,2,2,2,2,2,2,2,2,2,1,0,0,0]
  ,[0,0,0,0,0,0,1,1,1,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,0,0,0,0]
  ,[0,0,0,0,0,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0]
  ,[0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,0]
  ,[0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0]
  ]
]
, nyancat_data_nr = nyancat_data.length
, nyancat_data_lines = nyancat_data[0].length
, nyancat_data_columns = nyancat_data[0][0].length
;
/* }}} */

/*
 * rainbow function
 * {{{ */
var rainbow = function(spec, canvas) {
  var that = {}
    , context = canvas.context
    , x0 = spec.x0, y0 = spec.y0, dot = spec.dot
    , colors = spec.colors, color_nr = colors.length
    , width, weight, number, step, reverse, f, fps_rainbow, y_pos
    ;

  initialize();
  /* private function */
  function initialize() {
    reverse = 1;
    f = 0;
    fps_rainbow = 5;
    y_pos = new Array(number);
    initXY(x0, y0, dot);
    setWidth(dot);
    setWeight(dot);
    setNumber(width);
    setStep(weight);
  }
  function initXY(x, y, dot) {
    x0 = x + dot * 2;
    y0 = y + dot * 3;
  }
  function setWidth(dot) {
    width = dot * 7;
  }
  function setWeight(dot) {
    weight = dot * 2;
  }
  function setNumber(width) {
    number = x0 / width + 2 >> 0
  }
  function setStep(weight) {
    step = weight / 2 >> 0
  }
  function setPosY() {
    for (var i = 0; i < number; i++) {
      switch (i % 6) {
        case 0: case 4:
          y_pos[i] = y0 + reverse * step;
          break;
        case 1: case 3:
          y_pos[i] = y0;
          break;
        case 2:
          y_pos[i] = y0 - reverse * step;
          break;
        case 5:
          y_pos[i] = y0 + reverse * weight;
          break;
        default:
          y_pos[i] = y0;
          break;
      }
    }
  }

  /* public method */
  that = {
    draw: function() {
      setPosY();
      for(var i = 0, x = x0, y; i < number; i++) {
        y = y_pos[i];
        for (var color in colors) {
          context.fillStyle = colors[color];
          context.fillRect(x, y, width, weight);
          y += weight;
        }
        y -= weight * color_nr;
        x -= width;
      }
      // reverse direction of rainbow
      if (++f > fps_rainbow) {
        f = 0;
        reverse = -reverse;
      }
    }
  , setXY: function(x, y, dot) {
      initXY(x, y, dot);
      setNumber(width)
    }
  , resize: function(x, y, dot) {
      initXY(x, y, dot);
      setWidth(dot);
      setWeight(dot);
      setNumber(width);
      setStep(weight);
    }
  };
  return that;
};
/* }}} */

/*
 * nyancat function
 * {{{ */
var nyancat = function(spec, canvas) {
  var that = {}
    , context = canvas.context
    , x = spec.x, y = spec.y, dot = spec.dot
    , k, my_rainbow
    ;

  initialize();
  /* private function */
  function initialize() {
    k = 0;
    my_rainbow = rainbow({
        x0 : x
      , y0 : y
      , dot: dot
      , colors : [
          'rgb(255, 0, 0)'    // red
        , 'rgb(255, 153, 0)'  // orange
        , 'rgb(255, 255, 0)'  // yellow
        , 'rgb(0, 255, 0)'    // green
        , 'rgb(0, 0, 255)'    // blue
        , 'rgb(102, 0, 153)'  // purple
      ]
    }, canvas);
  }
  function getNyanColor(data) {
    switch (data) {
      case 1: // #000000
        return 'rgb(0,0,0)';
      case 2: // #999999
        return 'rgb(153,153,153)';
      case 3: // #ff99cc
        return 'rgb(255,153,204)';
      case 4: // #ffcc99
        return 'rgb(255,204,153)';
      case 5: // #ffffff
        return 'rgb(255,255,255)';
      case 6: // #ff6699
        return 'rgb(255,102,153)';
      case 7: // #ff3399
        return 'rgb(255,51,153)';
      default:
        return 'rgba(0,0,0,0)';
    }
  }

  /* public method */
  that = {
    draw: function () {
      my_rainbow.draw();
      for (var i = 0; i < nyancat_data_lines; ++i) {
        for (var j = 0; j < nyancat_data_columns; ++j) {
          context.fillStyle = getNyanColor(nyancat_data[k][i][j]);
          context.fillRect(x + j * dot, y + i * dot, dot, dot);
        }
      }
      if (++k > nyancat_data_nr - 1) {
        k = 0;
      }
    }
  , setXY: function(_x, _y) {
      x = _x || 1;
      y = _y || 1;
      my_rainbow.setXY(x, y, dot);
    }
  , setDotSize: function(_dot) {
      dot = _dot || 1;
      my_rainbow.resize(x, y, dot);
    }
  , getCenterXY: function() {
      return {
          x: dot * nyancat_data_columns / 2 >> 0
        , y: dot * nyancat_data_lines / 2 >> 0
      };
    }
  };
  return that;
};
/* }}} */

/*
 * nyancatCanvas Class
 * {{{ */
var nyancat_canvas = function(nyancat_spec, cvs) {
  var that = {}
    , canvas_mgr
    , rainbow
    , meowcat
    , particles
    , fps = 1000 / 15 >> 0
    ;
  that = {
    init: function() {
      canvas_mgr = canvas_manager(cvs);
      canvas_mgr.setBackgroundColor("rgb(0,51,153)");
      meowcat = nyancat(nyancat_spec, cvs);
      particles = new Array(nyancat_spec.particle_nr);
      for (var i = 0; i < particles.length; i++) {
        particles[i] = particle({
            k: i % particle_data.length
          , color: '255,255,255'
          , dot: nyancat_spec.dot / 2 >> 0
          , span: nyancat_spec.dot * 5
          , range: nyancat_spec.dot * 10
        }, cvs);
      }
    },
    start: function() {
      cvs.context.globalCompositeOperation = 'source-over';
      cvs.self.onmousedown = function(event) {
        var ctr = meowcat.getCenterXY();
        meowcat.setXY(event.offsetX-ctr.x, event.offsetY-ctr.y);
        meowcat.setDotSize(++nyancat_spec.dot);
      };
      nyan_interval = setInterval(function () {
        canvas_mgr.fillCanvas();
        meowcat.draw();
        for (var i = 0; i < particles.length; i++) {
          particles[i].draw();
        }
      }, fps);
    },
    stop: function() {
      clearInterval(nyan_interval);
    }
  };
  return that;
};
/* }}} */

